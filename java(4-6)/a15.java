import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class a15 {
    public static void main(String []args)
    {

         Comparator<student> comp =new Comparator<student>()// compaarator is a interface // both sides student should mention because it is annonymus inner class
         {
             public int compare (student i,  student j) // Interger because collections works with tghe wrapper classes
            {
         //if(i.age > j.age)
            // return 1; // its swaps
         //else 
          // return -1; // its doesnt swaps

     return i.age>j.age? 1 :-1;
            }
            
        };// comparator is a interface 
         List<student> stud= new ArrayList<>();

         stud.add(new student(21,"navin"));
         stud.add(new student(31,"naffffhvin"));
         stud.add(new student(26,"navgfin"));
         stud.add(new student(41,"navvbin"));
           for(student s:stud)
           {
        
        
          System.out.println(s);
          }
         System.out.println(stud);
     
       
         //sorting
         Collections.sort(stud);// sorting using compareto
        Collections.sort(stud,comp);// sorting using comparator
         System.out.println(stud);
    }
    
}
class student  implements Comparable<student>
{int age;
    String name;
   

    public student(int age, String name)// constructer  generated by right click source action geneerate constructer
     {
        this.age = age;
        this.name = name;
    }

    @Override
    public int compareTo(student that) {
        if(this.age > that.age)
        return 1; // its swaps
    else 
      return -1; // its doesnt swaps

    }
    @Override
    public String toString() {
      return "studen [age=" + age + ", name=" + name + "]";
    }
  
  
}
